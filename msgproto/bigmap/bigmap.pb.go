// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: bigmap.proto

package bigmap

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	_ "server/msgproto/common"
	troops "server/msgproto/troops"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//消息号
type MSG_BIGMAP int32

const (
	MSG_BIGMAP_PLACEHOLDER_MAP MSG_BIGMAP = 0 //占位
	//大地图模块
	MSG_BIGMAP_Module_BIGMAP MSG_BIGMAP = 2000
	//区域信息
	MSG_BIGMAP_S2C_AreasInfo MSG_BIGMAP = 2010 //
	//移动
	MSG_BIGMAP_C2S_Move MSG_BIGMAP = 2030
	MSG_BIGMAP_S2C_Move MSG_BIGMAP = 2031
	//暂停移动
	MSG_BIGMAP_C2S_StopMoving MSG_BIGMAP = 2032 //S2C_StopMoving= 2033;
	//触发战斗通知
	MSG_BIGMAP_S2C_Fight     MSG_BIGMAP = 2041
	MSG_BIGMAP_S2C_OverFight MSG_BIGMAP = 2042
	//获取区域简迅 区域战斗双方部队数据
	MSG_BIGMAP_C2S_AreasSimple MSG_BIGMAP = 2051
	MSG_BIGMAP_S2C_AreasSimple MSG_BIGMAP = 2052
	//订阅战斗区域
	MSG_BIGMAP_C2S_FightSubscribe MSG_BIGMAP = 2053
	//取消订阅
	MSG_BIGMAP_C2S_FightCancelSubscribe MSG_BIGMAP = 2054
	//订阅后 区域战斗队列推送
	MSG_BIGMAP_S2C_FightSubscribe MSG_BIGMAP = 2055
	//部队详细信息 (上阵时推送)
	MSG_BIGMAP_S2C_QueueTroopsInfo MSG_BIGMAP = 2056
	//部队进入区域队列
	MSG_BIGMAP_S2C_EntryQueue MSG_BIGMAP = 2057
	//部队离开区域队列
	MSG_BIGMAP_S2C_LeaveQueue MSG_BIGMAP = 2058
)

// Enum value maps for MSG_BIGMAP.
var (
	MSG_BIGMAP_name = map[int32]string{
		0:    "PLACEHOLDER_MAP",
		2000: "Module_BIGMAP",
		2010: "S2C_AreasInfo",
		2030: "C2S_Move",
		2031: "S2C_Move",
		2032: "C2S_StopMoving",
		2041: "S2C_Fight",
		2042: "S2C_OverFight",
		2051: "C2S_AreasSimple",
		2052: "S2C_AreasSimple",
		2053: "C2S_FightSubscribe",
		2054: "C2S_FightCancelSubscribe",
		2055: "S2C_FightSubscribe",
		2056: "S2C_QueueTroopsInfo",
		2057: "S2C_EntryQueue",
		2058: "S2C_LeaveQueue",
	}
	MSG_BIGMAP_value = map[string]int32{
		"PLACEHOLDER_MAP":          0,
		"Module_BIGMAP":            2000,
		"S2C_AreasInfo":            2010,
		"C2S_Move":                 2030,
		"S2C_Move":                 2031,
		"C2S_StopMoving":           2032,
		"S2C_Fight":                2041,
		"S2C_OverFight":            2042,
		"C2S_AreasSimple":          2051,
		"S2C_AreasSimple":          2052,
		"C2S_FightSubscribe":       2053,
		"C2S_FightCancelSubscribe": 2054,
		"S2C_FightSubscribe":       2055,
		"S2C_QueueTroopsInfo":      2056,
		"S2C_EntryQueue":           2057,
		"S2C_LeaveQueue":           2058,
	}
)

func (x MSG_BIGMAP) Enum() *MSG_BIGMAP {
	p := new(MSG_BIGMAP)
	*p = x
	return p
}

func (x MSG_BIGMAP) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MSG_BIGMAP) Descriptor() protoreflect.EnumDescriptor {
	return file_bigmap_proto_enumTypes[0].Descriptor()
}

func (MSG_BIGMAP) Type() protoreflect.EnumType {
	return &file_bigmap_proto_enumTypes[0]
}

func (x MSG_BIGMAP) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MSG_BIGMAP.Descriptor instead.
func (MSG_BIGMAP) EnumDescriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{0}
}

//区域信息
type P_AreasInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreasIndex int32 `protobuf:"varint,1,opt,name=AreasIndex,proto3" json:"AreasIndex,omitempty"` //区域ID
	Type       int32 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`             //0 中立  1-3 国家KEY
	State      int32 `protobuf:"varint,3,opt,name=State,proto3" json:"State,omitempty"`           //区域状态 0:无  1:战斗中
}

func (x *P_AreasInfo) Reset() {
	*x = P_AreasInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P_AreasInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P_AreasInfo) ProtoMessage() {}

func (x *P_AreasInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P_AreasInfo.ProtoReflect.Descriptor instead.
func (*P_AreasInfo) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{0}
}

func (x *P_AreasInfo) GetAreasIndex() int32 {
	if x != nil {
		return x.AreasIndex
	}
	return 0
}

func (x *P_AreasInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *P_AreasInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

//区域信息
type S2C_AreasInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreasInfoList []*P_AreasInfo `protobuf:"bytes,1,rep,name=AreasInfoList,proto3" json:"AreasInfoList,omitempty"`
}

func (x *S2C_AreasInfo) Reset() {
	*x = S2C_AreasInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_AreasInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_AreasInfo) ProtoMessage() {}

func (x *S2C_AreasInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_AreasInfo.ProtoReflect.Descriptor instead.
func (*S2C_AreasInfo) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{1}
}

func (x *S2C_AreasInfo) GetAreasInfoList() []*P_AreasInfo {
	if x != nil {
		return x.AreasInfoList
	}
	return nil
}

//移动
type C2S_Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TroopsID  int32   `protobuf:"varint,1,opt,name=TroopsID,proto3" json:"TroopsID,omitempty"`          //部队ID
	AreasList []int32 `protobuf:"varint,2,rep,packed,name=AreasList,proto3" json:"AreasList,omitempty"` //路径 区域ID
}

func (x *C2S_Move) Reset() {
	*x = C2S_Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_Move) ProtoMessage() {}

func (x *C2S_Move) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_Move.ProtoReflect.Descriptor instead.
func (*C2S_Move) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{2}
}

func (x *C2S_Move) GetTroopsID() int32 {
	if x != nil {
		return x.TroopsID
	}
	return 0
}

func (x *C2S_Move) GetAreasList() []int32 {
	if x != nil {
		return x.AreasList
	}
	return nil
}

type S2C_Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TroopsID    int32 `protobuf:"varint,1,opt,name=TroopsID,proto3" json:"TroopsID,omitempty"`       //部队ID
	AreasIndex  int32 `protobuf:"varint,2,opt,name=AreasIndex,proto3" json:"AreasIndex,omitempty"`   //当前行进区域ID
	ArrivalTime int64 `protobuf:"varint,3,opt,name=ArrivalTime,proto3" json:"ArrivalTime,omitempty"` //预计到达时间时间戳
	State       int32 `protobuf:"varint,4,opt,name=State,proto3" json:"State,omitempty"`             //部队状态 0启动移动
}

func (x *S2C_Move) Reset() {
	*x = S2C_Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_Move) ProtoMessage() {}

func (x *S2C_Move) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_Move.ProtoReflect.Descriptor instead.
func (*S2C_Move) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{3}
}

func (x *S2C_Move) GetTroopsID() int32 {
	if x != nil {
		return x.TroopsID
	}
	return 0
}

func (x *S2C_Move) GetAreasIndex() int32 {
	if x != nil {
		return x.AreasIndex
	}
	return 0
}

func (x *S2C_Move) GetArrivalTime() int64 {
	if x != nil {
		return x.ArrivalTime
	}
	return 0
}

func (x *S2C_Move) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

//暂停移动
type C2S_StopMoving struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TroopsID int32 `protobuf:"varint,1,opt,name=TroopsID,proto3" json:"TroopsID,omitempty"` //部队ID
}

func (x *C2S_StopMoving) Reset() {
	*x = C2S_StopMoving{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_StopMoving) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_StopMoving) ProtoMessage() {}

func (x *C2S_StopMoving) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_StopMoving.ProtoReflect.Descriptor instead.
func (*C2S_StopMoving) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{4}
}

func (x *C2S_StopMoving) GetTroopsID() int32 {
	if x != nil {
		return x.TroopsID
	}
	return 0
}

//部队进入战斗
type S2C_Fight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TroopsID int32 `protobuf:"varint,1,opt,name=TroopsID,proto3" json:"TroopsID,omitempty"` //部队ID
}

func (x *S2C_Fight) Reset() {
	*x = S2C_Fight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_Fight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_Fight) ProtoMessage() {}

func (x *S2C_Fight) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_Fight.ProtoReflect.Descriptor instead.
func (*S2C_Fight) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{5}
}

func (x *S2C_Fight) GetTroopsID() int32 {
	if x != nil {
		return x.TroopsID
	}
	return 0
}

type S2C_OverFight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreasIndex int32 `protobuf:"varint,1,opt,name=AreasIndex,proto3" json:"AreasIndex,omitempty"` //区域ID
	Victory    int32 `protobuf:"varint,2,opt,name=Victory,proto3" json:"Victory,omitempty"`       //胜方 1 守方 2攻方
}

func (x *S2C_OverFight) Reset() {
	*x = S2C_OverFight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_OverFight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_OverFight) ProtoMessage() {}

func (x *S2C_OverFight) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_OverFight.ProtoReflect.Descriptor instead.
func (*S2C_OverFight) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{6}
}

func (x *S2C_OverFight) GetAreasIndex() int32 {
	if x != nil {
		return x.AreasIndex
	}
	return 0
}

func (x *S2C_OverFight) GetVictory() int32 {
	if x != nil {
		return x.Victory
	}
	return 0
}

//订阅战斗区域
type C2S_FightSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreasIndex int32 `protobuf:"varint,1,opt,name=AreasIndex,proto3" json:"AreasIndex,omitempty"` //区域index
}

func (x *C2S_FightSubscribe) Reset() {
	*x = C2S_FightSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_FightSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_FightSubscribe) ProtoMessage() {}

func (x *C2S_FightSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_FightSubscribe.ProtoReflect.Descriptor instead.
func (*C2S_FightSubscribe) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{7}
}

func (x *C2S_FightSubscribe) GetAreasIndex() int32 {
	if x != nil {
		return x.AreasIndex
	}
	return 0
}

//区域战斗信息 (部队前两位详细信息,未上阵部队只有ID与部队名称)
type S2C_FightSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackTroopsList  []*troops.P_Troops `protobuf:"bytes,1,rep,name=AttackTroopsList,proto3" json:"AttackTroopsList,omitempty"`   //攻方上阵部队
	DefenseTroopsList []*troops.P_Troops `protobuf:"bytes,2,rep,name=DefenseTroopsList,proto3" json:"DefenseTroopsList,omitempty"` //守方上阵部队
	FightStamp        int64              `protobuf:"varint,3,opt,name=fightStamp,proto3" json:"fightStamp,omitempty"`              //下轮战斗时间戳
	Msg               string             `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *S2C_FightSubscribe) Reset() {
	*x = S2C_FightSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_FightSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_FightSubscribe) ProtoMessage() {}

func (x *S2C_FightSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_FightSubscribe.ProtoReflect.Descriptor instead.
func (*S2C_FightSubscribe) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{8}
}

func (x *S2C_FightSubscribe) GetAttackTroopsList() []*troops.P_Troops {
	if x != nil {
		return x.AttackTroopsList
	}
	return nil
}

func (x *S2C_FightSubscribe) GetDefenseTroopsList() []*troops.P_Troops {
	if x != nil {
		return x.DefenseTroopsList
	}
	return nil
}

func (x *S2C_FightSubscribe) GetFightStamp() int64 {
	if x != nil {
		return x.FightStamp
	}
	return 0
}

func (x *S2C_FightSubscribe) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

//部队详细信息
type S2C_QueueTroopsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackTroopsList  []*troops.P_Troops `protobuf:"bytes,1,rep,name=AttackTroopsList,proto3" json:"AttackTroopsList,omitempty"`   //攻方上阵部队
	DefenseTroopsList []*troops.P_Troops `protobuf:"bytes,2,rep,name=DefenseTroopsList,proto3" json:"DefenseTroopsList,omitempty"` //守方上阵部队
}

func (x *S2C_QueueTroopsInfo) Reset() {
	*x = S2C_QueueTroopsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_QueueTroopsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_QueueTroopsInfo) ProtoMessage() {}

func (x *S2C_QueueTroopsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_QueueTroopsInfo.ProtoReflect.Descriptor instead.
func (*S2C_QueueTroopsInfo) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{9}
}

func (x *S2C_QueueTroopsInfo) GetAttackTroopsList() []*troops.P_Troops {
	if x != nil {
		return x.AttackTroopsList
	}
	return nil
}

func (x *S2C_QueueTroopsInfo) GetDefenseTroopsList() []*troops.P_Troops {
	if x != nil {
		return x.DefenseTroopsList
	}
	return nil
}

//部队进入区域战斗队列
type S2C_EntryQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreasIndex int32            `protobuf:"varint,1,opt,name=AreasIndex,proto3" json:"AreasIndex,omitempty"`
	Troops     *troops.P_Troops `protobuf:"bytes,2,opt,name=Troops,proto3" json:"Troops,omitempty"`
	Queue      int32            `protobuf:"varint,3,opt,name=Queue,proto3" json:"Queue,omitempty"` //队列 0 守方  1 攻方
	Type       int32            `protobuf:"varint,4,opt,name=Type,proto3" json:"Type,omitempty"`   //类型(预留)
}

func (x *S2C_EntryQueue) Reset() {
	*x = S2C_EntryQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_EntryQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_EntryQueue) ProtoMessage() {}

func (x *S2C_EntryQueue) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_EntryQueue.ProtoReflect.Descriptor instead.
func (*S2C_EntryQueue) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{10}
}

func (x *S2C_EntryQueue) GetAreasIndex() int32 {
	if x != nil {
		return x.AreasIndex
	}
	return 0
}

func (x *S2C_EntryQueue) GetTroops() *troops.P_Troops {
	if x != nil {
		return x.Troops
	}
	return nil
}

func (x *S2C_EntryQueue) GetQueue() int32 {
	if x != nil {
		return x.Queue
	}
	return 0
}

func (x *S2C_EntryQueue) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

//部队离开区域队列
type S2C_LeaveQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreasIndex int32 `protobuf:"varint,1,opt,name=AreasIndex,proto3" json:"AreasIndex,omitempty"`
	TroopsID   int32 `protobuf:"varint,2,opt,name=TroopsID,proto3" json:"TroopsID,omitempty"`
}

func (x *S2C_LeaveQueue) Reset() {
	*x = S2C_LeaveQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_LeaveQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_LeaveQueue) ProtoMessage() {}

func (x *S2C_LeaveQueue) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_LeaveQueue.ProtoReflect.Descriptor instead.
func (*S2C_LeaveQueue) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{11}
}

func (x *S2C_LeaveQueue) GetAreasIndex() int32 {
	if x != nil {
		return x.AreasIndex
	}
	return 0
}

func (x *S2C_LeaveQueue) GetTroopsID() int32 {
	if x != nil {
		return x.TroopsID
	}
	return 0
}

//查看区域 简讯
type C2S_AreasSimple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreasIndex int32 `protobuf:"varint,1,opt,name=AreasIndex,proto3" json:"AreasIndex,omitempty"` //区域index
}

func (x *C2S_AreasSimple) Reset() {
	*x = C2S_AreasSimple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_AreasSimple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_AreasSimple) ProtoMessage() {}

func (x *C2S_AreasSimple) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_AreasSimple.ProtoReflect.Descriptor instead.
func (*C2S_AreasSimple) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{12}
}

func (x *C2S_AreasSimple) GetAreasIndex() int32 {
	if x != nil {
		return x.AreasIndex
	}
	return 0
}

type S2C_AreasSimple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreasIndex    int32           `protobuf:"varint,1,opt,name=AreasIndex,proto3" json:"AreasIndex,omitempty"`                                                                                                //区域index
	TroopsNumList map[int32]int32 `protobuf:"bytes,2,rep,name=TroopsNumList,proto3" json:"TroopsNumList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //部队数量列表,<国家，数量>
}

func (x *S2C_AreasSimple) Reset() {
	*x = S2C_AreasSimple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_AreasSimple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_AreasSimple) ProtoMessage() {}

func (x *S2C_AreasSimple) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_AreasSimple.ProtoReflect.Descriptor instead.
func (*S2C_AreasSimple) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{13}
}

func (x *S2C_AreasSimple) GetAreasIndex() int32 {
	if x != nil {
		return x.AreasIndex
	}
	return 0
}

func (x *S2C_AreasSimple) GetTroopsNumList() map[int32]int32 {
	if x != nil {
		return x.TroopsNumList
	}
	return nil
}

//取消订阅
type C2S_FightCancelSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreasIndex int32 `protobuf:"varint,1,opt,name=AreasIndex,proto3" json:"AreasIndex,omitempty"` //区域index
}

func (x *C2S_FightCancelSubscribe) Reset() {
	*x = C2S_FightCancelSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bigmap_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_FightCancelSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_FightCancelSubscribe) ProtoMessage() {}

func (x *C2S_FightCancelSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_bigmap_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_FightCancelSubscribe.ProtoReflect.Descriptor instead.
func (*C2S_FightCancelSubscribe) Descriptor() ([]byte, []int) {
	return file_bigmap_proto_rawDescGZIP(), []int{14}
}

func (x *C2S_FightCancelSubscribe) GetAreasIndex() int32 {
	if x != nil {
		return x.AreasIndex
	}
	return 0
}

var File_bigmap_proto protoreflect.FileDescriptor

var file_bigmap_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x62, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x57, 0x0a, 0x0b, 0x50, 0x5f, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4a, 0x0a, 0x0d, 0x73,
	0x32, 0x63, 0x5f, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0d,
	0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x2e, 0x50, 0x5f, 0x41,
	0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x08, 0x63, 0x32, 0x73, 0x5f, 0x4d,
	0x6f, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x72, 0x65, 0x61, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x09, 0x41, 0x72, 0x65, 0x61, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7e, 0x0a,
	0x08, 0x73, 0x32, 0x63, 0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x72, 0x6f,
	0x6f, 0x70, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x72, 0x6f,
	0x6f, 0x70, 0x73, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2c, 0x0a,
	0x0e, 0x63, 0x32, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x22, 0x27, 0x0a, 0x09, 0x73,
	0x32, 0x63, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x72, 0x6f, 0x6f,
	0x70, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x72, 0x6f, 0x6f,
	0x70, 0x73, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x0d, 0x73, 0x32, 0x63, 0x5f, 0x4f, 0x76, 0x65, 0x72,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22,
	0x34, 0x0a, 0x12, 0x63, 0x32, 0x73, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x73, 0x32, 0x63, 0x5f, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x3c, 0x0a, 0x10,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x2e,
	0x50, 0x5f, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x52, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x11, 0x44, 0x65,
	0x66, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x2e, 0x50,
	0x5f, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x52, 0x11, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65,
	0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x93, 0x01, 0x0a,
	0x13, 0x73, 0x32, 0x63, 0x5f, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72,
	0x6f, 0x6f, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x2e, 0x50, 0x5f, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73,
	0x52, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3e, 0x0a, 0x11, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x72, 0x6f,
	0x6f, 0x70, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x2e, 0x50, 0x5f, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x52,
	0x11, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0e, 0x73, 0x32, 0x63, 0x5f, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x06, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x2e, 0x50,
	0x5f, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x52, 0x06, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4c, 0x0a, 0x0e, 0x73, 0x32, 0x63,
	0x5f, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41,
	0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54,
	0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x22, 0x31, 0x0a, 0x0f, 0x63, 0x32, 0x73, 0x5f, 0x41,
	0x72, 0x65, 0x61, 0x73, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x72,
	0x65, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xc5, 0x01, 0x0a, 0x0f, 0x73,
	0x32, 0x63, 0x5f, 0x41, 0x72, 0x65, 0x61, 0x73, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x50,
	0x0a, 0x0d, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x2e, 0x73,
	0x32, 0x63, 0x5f, 0x41, 0x72, 0x65, 0x61, 0x73, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x54,
	0x72, 0x6f, 0x6f, 0x70, 0x73, 0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x40, 0x0a, 0x12, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x3a, 0x0a, 0x18, 0x63, 0x32, 0x73, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2a, 0xe1,
	0x02, 0x0a, 0x0a, 0x4d, 0x53, 0x47, 0x5f, 0x42, 0x49, 0x47, 0x4d, 0x41, 0x50, 0x12, 0x13, 0x0a,
	0x0f, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x48, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x50,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x42, 0x49, 0x47,
	0x4d, 0x41, 0x50, 0x10, 0xd0, 0x0f, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x5f, 0x41, 0x72,
	0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0xda, 0x0f, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x32,
	0x53, 0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0xee, 0x0f, 0x12, 0x0d, 0x0a, 0x08, 0x53, 0x32, 0x43,
	0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0xef, 0x0f, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x32, 0x53, 0x5f,
	0x53, 0x74, 0x6f, 0x70, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x10, 0xf0, 0x0f, 0x12, 0x0e, 0x0a,
	0x09, 0x53, 0x32, 0x43, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x10, 0xf9, 0x0f, 0x12, 0x12, 0x0a,
	0x0d, 0x53, 0x32, 0x43, 0x5f, 0x4f, 0x76, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x10, 0xfa,
	0x0f, 0x12, 0x14, 0x0a, 0x0f, 0x43, 0x32, 0x53, 0x5f, 0x41, 0x72, 0x65, 0x61, 0x73, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x10, 0x83, 0x10, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x5f, 0x41,
	0x72, 0x65, 0x61, 0x73, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x10, 0x84, 0x10, 0x12, 0x17, 0x0a,
	0x12, 0x43, 0x32, 0x53, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x10, 0x85, 0x10, 0x12, 0x1d, 0x0a, 0x18, 0x43, 0x32, 0x53, 0x5f, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x10, 0x86, 0x10, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x32, 0x43, 0x5f, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x10, 0x87, 0x10, 0x12, 0x18,
	0x0a, 0x13, 0x53, 0x32, 0x43, 0x5f, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x72, 0x6f, 0x6f, 0x70,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x88, 0x10, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x5f,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x10, 0x89, 0x10, 0x12, 0x13, 0x0a,
	0x0e, 0x53, 0x32, 0x43, 0x5f, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x10,
	0x8a, 0x10, 0x42, 0x1b, 0x5a, 0x19, 0x73, 0x6c, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x6d, 0x73, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bigmap_proto_rawDescOnce sync.Once
	file_bigmap_proto_rawDescData = file_bigmap_proto_rawDesc
)

func file_bigmap_proto_rawDescGZIP() []byte {
	file_bigmap_proto_rawDescOnce.Do(func() {
		file_bigmap_proto_rawDescData = protoimpl.X.CompressGZIP(file_bigmap_proto_rawDescData)
	})
	return file_bigmap_proto_rawDescData
}

var file_bigmap_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bigmap_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_bigmap_proto_goTypes = []interface{}{
	(MSG_BIGMAP)(0),                  // 0: bigmap.MSG_BIGMAP
	(*P_AreasInfo)(nil),              // 1: bigmap.P_AreasInfo
	(*S2C_AreasInfo)(nil),            // 2: bigmap.s2c_AreasInfo
	(*C2S_Move)(nil),                 // 3: bigmap.c2s_Move
	(*S2C_Move)(nil),                 // 4: bigmap.s2c_Move
	(*C2S_StopMoving)(nil),           // 5: bigmap.c2s_StopMoving
	(*S2C_Fight)(nil),                // 6: bigmap.s2c_Fight
	(*S2C_OverFight)(nil),            // 7: bigmap.s2c_OverFight
	(*C2S_FightSubscribe)(nil),       // 8: bigmap.c2s_FightSubscribe
	(*S2C_FightSubscribe)(nil),       // 9: bigmap.s2c_FightSubscribe
	(*S2C_QueueTroopsInfo)(nil),      // 10: bigmap.s2c_QueueTroopsInfo
	(*S2C_EntryQueue)(nil),           // 11: bigmap.s2c_EntryQueue
	(*S2C_LeaveQueue)(nil),           // 12: bigmap.s2c_LeaveQueue
	(*C2S_AreasSimple)(nil),          // 13: bigmap.c2s_AreasSimple
	(*S2C_AreasSimple)(nil),          // 14: bigmap.s2c_AreasSimple
	(*C2S_FightCancelSubscribe)(nil), // 15: bigmap.c2s_FightCancelSubscribe
	nil,                              // 16: bigmap.s2c_AreasSimple.TroopsNumListEntry
	(*troops.P_Troops)(nil),          // 17: troops.P_Troops
}
var file_bigmap_proto_depIdxs = []int32{
	1,  // 0: bigmap.s2c_AreasInfo.AreasInfoList:type_name -> bigmap.P_AreasInfo
	17, // 1: bigmap.s2c_FightSubscribe.AttackTroopsList:type_name -> troops.P_Troops
	17, // 2: bigmap.s2c_FightSubscribe.DefenseTroopsList:type_name -> troops.P_Troops
	17, // 3: bigmap.s2c_QueueTroopsInfo.AttackTroopsList:type_name -> troops.P_Troops
	17, // 4: bigmap.s2c_QueueTroopsInfo.DefenseTroopsList:type_name -> troops.P_Troops
	17, // 5: bigmap.s2c_EntryQueue.Troops:type_name -> troops.P_Troops
	16, // 6: bigmap.s2c_AreasSimple.TroopsNumList:type_name -> bigmap.s2c_AreasSimple.TroopsNumListEntry
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_bigmap_proto_init() }
func file_bigmap_proto_init() {
	if File_bigmap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bigmap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P_AreasInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_AreasInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_StopMoving); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_Fight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_OverFight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_FightSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_FightSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_QueueTroopsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_EntryQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_LeaveQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_AreasSimple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_AreasSimple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bigmap_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_FightCancelSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bigmap_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bigmap_proto_goTypes,
		DependencyIndexes: file_bigmap_proto_depIdxs,
		EnumInfos:         file_bigmap_proto_enumTypes,
		MessageInfos:      file_bigmap_proto_msgTypes,
	}.Build()
	File_bigmap_proto = out.File
	file_bigmap_proto_rawDesc = nil
	file_bigmap_proto_goTypes = nil
	file_bigmap_proto_depIdxs = nil
}
