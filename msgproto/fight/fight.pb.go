// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: fight.proto

package fight

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	_ "slgserver/msgproto/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//消息号
type MSG_FIGHT int32

const (
	MSG_FIGHT_PLACEHOLDER_FIGHT MSG_FIGHT = 0 //占位
	MSG_FIGHT_Module_FIGHT      MSG_FIGHT = 4000
	MSG_FIGHT_C2S_Auto_Select   MSG_FIGHT = 4001
	MSG_FIGHT_S2C_Auto_Select   MSG_FIGHT = 4002
	//选择战术
	MSG_FIGHT_C2S_Select_Tactics MSG_FIGHT = 4003
	MSG_FIGHT_S2C_Select_Tactics MSG_FIGHT = 4004
	//战斗记录推送
	MSG_FIGHT_S2C_FightRecordPush MSG_FIGHT = 4010
)

// Enum value maps for MSG_FIGHT.
var (
	MSG_FIGHT_name = map[int32]string{
		0:    "PLACEHOLDER_FIGHT",
		4000: "Module_FIGHT",
		4001: "C2S_Auto_Select",
		4002: "S2C_Auto_Select",
		4003: "C2S_Select_Tactics",
		4004: "S2C_Select_Tactics",
		4010: "S2C_FightRecordPush",
	}
	MSG_FIGHT_value = map[string]int32{
		"PLACEHOLDER_FIGHT":   0,
		"Module_FIGHT":        4000,
		"C2S_Auto_Select":     4001,
		"S2C_Auto_Select":     4002,
		"C2S_Select_Tactics":  4003,
		"S2C_Select_Tactics":  4004,
		"S2C_FightRecordPush": 4010,
	}
)

func (x MSG_FIGHT) Enum() *MSG_FIGHT {
	p := new(MSG_FIGHT)
	*p = x
	return p
}

func (x MSG_FIGHT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MSG_FIGHT) Descriptor() protoreflect.EnumDescriptor {
	return file_fight_proto_enumTypes[0].Descriptor()
}

func (MSG_FIGHT) Type() protoreflect.EnumType {
	return &file_fight_proto_enumTypes[0]
}

func (x MSG_FIGHT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MSG_FIGHT.Descriptor instead.
func (MSG_FIGHT) EnumDescriptor() ([]byte, []int) {
	return file_fight_proto_rawDescGZIP(), []int{0}
}

//自动选择
type C2S_AutoSelect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoSelect bool `protobuf:"varint,1,opt,name=AutoSelect,proto3" json:"AutoSelect,omitempty"` //自动，手动
}

func (x *C2S_AutoSelect) Reset() {
	*x = C2S_AutoSelect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_AutoSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_AutoSelect) ProtoMessage() {}

func (x *C2S_AutoSelect) ProtoReflect() protoreflect.Message {
	mi := &file_fight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_AutoSelect.ProtoReflect.Descriptor instead.
func (*C2S_AutoSelect) Descriptor() ([]byte, []int) {
	return file_fight_proto_rawDescGZIP(), []int{0}
}

func (x *C2S_AutoSelect) GetAutoSelect() bool {
	if x != nil {
		return x.AutoSelect
	}
	return false
}

type S2C_AutoSelect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoSelect bool   `protobuf:"varint,1,opt,name=AutoSelect,proto3" json:"AutoSelect,omitempty"`
	Msg        string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *S2C_AutoSelect) Reset() {
	*x = S2C_AutoSelect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_AutoSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_AutoSelect) ProtoMessage() {}

func (x *S2C_AutoSelect) ProtoReflect() protoreflect.Message {
	mi := &file_fight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_AutoSelect.ProtoReflect.Descriptor instead.
func (*S2C_AutoSelect) Descriptor() ([]byte, []int) {
	return file_fight_proto_rawDescGZIP(), []int{1}
}

func (x *S2C_AutoSelect) GetAutoSelect() bool {
	if x != nil {
		return x.AutoSelect
	}
	return false
}

func (x *S2C_AutoSelect) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

//战术选择
type C2S_SelectTactics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TroopsID  int32 `protobuf:"varint,1,opt,name=troopsID,proto3" json:"troopsID,omitempty"` //部队id
	SkillID   int32 `protobuf:"varint,2,opt,name=SkillID,proto3" json:"SkillID,omitempty"`
	TacticsID int32 `protobuf:"varint,3,opt,name=TacticsID,proto3" json:"TacticsID,omitempty"` //手动选择战术ID
}

func (x *C2S_SelectTactics) Reset() {
	*x = C2S_SelectTactics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SelectTactics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SelectTactics) ProtoMessage() {}

func (x *C2S_SelectTactics) ProtoReflect() protoreflect.Message {
	mi := &file_fight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SelectTactics.ProtoReflect.Descriptor instead.
func (*C2S_SelectTactics) Descriptor() ([]byte, []int) {
	return file_fight_proto_rawDescGZIP(), []int{2}
}

func (x *C2S_SelectTactics) GetTroopsID() int32 {
	if x != nil {
		return x.TroopsID
	}
	return 0
}

func (x *C2S_SelectTactics) GetSkillID() int32 {
	if x != nil {
		return x.SkillID
	}
	return 0
}

func (x *C2S_SelectTactics) GetTacticsID() int32 {
	if x != nil {
		return x.TacticsID
	}
	return 0
}

type S2C_SelectTactics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TroopsID    int32  `protobuf:"varint,1,opt,name=troopsID,proto3" json:"troopsID,omitempty"`       //部队id
	SelectSkill int32  `protobuf:"varint,2,opt,name=SelectSkill,proto3" json:"SelectSkill,omitempty"` //是否可选技能 0 都可选 1 战术可选 2 都不可选
	Msg         string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`                  //error msg
}

func (x *S2C_SelectTactics) Reset() {
	*x = S2C_SelectTactics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_SelectTactics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_SelectTactics) ProtoMessage() {}

func (x *S2C_SelectTactics) ProtoReflect() protoreflect.Message {
	mi := &file_fight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_SelectTactics.ProtoReflect.Descriptor instead.
func (*S2C_SelectTactics) Descriptor() ([]byte, []int) {
	return file_fight_proto_rawDescGZIP(), []int{3}
}

func (x *S2C_SelectTactics) GetTroopsID() int32 {
	if x != nil {
		return x.TroopsID
	}
	return 0
}

func (x *S2C_SelectTactics) GetSelectSkill() int32 {
	if x != nil {
		return x.SelectSkill
	}
	return 0
}

func (x *S2C_SelectTactics) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

//战斗记录推送
type S2C_FightRecordPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record           []*P_FightRecord `protobuf:"bytes,1,rep,name=Record,proto3" json:"Record,omitempty"`                      //当前排战斗记录
	FightStamp       int64            `protobuf:"varint,2,opt,name=fightStamp,proto3" json:"fightStamp,omitempty"`             //下轮战斗时间戳
	AttackTacticsID  int32            `protobuf:"varint,3,opt,name=attackTacticsID,proto3" json:"attackTacticsID,omitempty"`   //攻方战术
	DefenseTacticsID int32            `protobuf:"varint,4,opt,name=defenseTacticsID,proto3" json:"defenseTacticsID,omitempty"` //守方战术
}

func (x *S2C_FightRecordPush) Reset() {
	*x = S2C_FightRecordPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fight_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_FightRecordPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_FightRecordPush) ProtoMessage() {}

func (x *S2C_FightRecordPush) ProtoReflect() protoreflect.Message {
	mi := &file_fight_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_FightRecordPush.ProtoReflect.Descriptor instead.
func (*S2C_FightRecordPush) Descriptor() ([]byte, []int) {
	return file_fight_proto_rawDescGZIP(), []int{4}
}

func (x *S2C_FightRecordPush) GetRecord() []*P_FightRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *S2C_FightRecordPush) GetFightStamp() int64 {
	if x != nil {
		return x.FightStamp
	}
	return 0
}

func (x *S2C_FightRecordPush) GetAttackTacticsID() int32 {
	if x != nil {
		return x.AttackTacticsID
	}
	return 0
}

func (x *S2C_FightRecordPush) GetDefenseTacticsID() int32 {
	if x != nil {
		return x.DefenseTacticsID
	}
	return 0
}

type P_FightRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TroopsID int32          `protobuf:"varint,1,opt,name=TroopsID,proto3" json:"TroopsID,omitempty"` //施法者ID
	Type     int32          `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`         //0 普攻  1 战法（技能） 2 战术 3 BUFF
	Value    int32          `protobuf:"varint,3,opt,name=Value,proto3" json:"Value,omitempty"`       //
	Attack   []*P_FightItem `protobuf:"bytes,4,rep,name=attack,proto3" json:"attack,omitempty"`      //攻方受击
	Defense  []*P_FightItem `protobuf:"bytes,5,rep,name=defense,proto3" json:"defense,omitempty"`    //守方受击
}

func (x *P_FightRecord) Reset() {
	*x = P_FightRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fight_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P_FightRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P_FightRecord) ProtoMessage() {}

func (x *P_FightRecord) ProtoReflect() protoreflect.Message {
	mi := &file_fight_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P_FightRecord.ProtoReflect.Descriptor instead.
func (*P_FightRecord) Descriptor() ([]byte, []int) {
	return file_fight_proto_rawDescGZIP(), []int{5}
}

func (x *P_FightRecord) GetTroopsID() int32 {
	if x != nil {
		return x.TroopsID
	}
	return 0
}

func (x *P_FightRecord) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *P_FightRecord) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *P_FightRecord) GetAttack() []*P_FightItem {
	if x != nil {
		return x.Attack
	}
	return nil
}

func (x *P_FightRecord) GetDefense() []*P_FightItem {
	if x != nil {
		return x.Defense
	}
	return nil
}

type P_FightItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TroopsID int32 `protobuf:"varint,1,opt,name=troopsID,proto3" json:"troopsID,omitempty"` //部队ID
	Rolw     int32 `protobuf:"varint,2,opt,name=rolw,proto3" json:"rolw,omitempty"`         //第几排
	Loss     int32 `protobuf:"varint,3,opt,name=loss,proto3" json:"loss,omitempty"`         //扣掉血量
	Dead     bool  `protobuf:"varint,4,opt,name=dead,proto3" json:"dead,omitempty"`         //死亡
	Bufid    int32 `protobuf:"varint,5,opt,name=bufid,proto3" json:"bufid,omitempty"`
}

func (x *P_FightItem) Reset() {
	*x = P_FightItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fight_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P_FightItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P_FightItem) ProtoMessage() {}

func (x *P_FightItem) ProtoReflect() protoreflect.Message {
	mi := &file_fight_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P_FightItem.ProtoReflect.Descriptor instead.
func (*P_FightItem) Descriptor() ([]byte, []int) {
	return file_fight_proto_rawDescGZIP(), []int{6}
}

func (x *P_FightItem) GetTroopsID() int32 {
	if x != nil {
		return x.TroopsID
	}
	return 0
}

func (x *P_FightItem) GetRolw() int32 {
	if x != nil {
		return x.Rolw
	}
	return 0
}

func (x *P_FightItem) GetLoss() int32 {
	if x != nil {
		return x.Loss
	}
	return 0
}

func (x *P_FightItem) GetDead() bool {
	if x != nil {
		return x.Dead
	}
	return false
}

func (x *P_FightItem) GetBufid() int32 {
	if x != nil {
		return x.Bufid
	}
	return 0
}

var File_fight_proto protoreflect.FileDescriptor

var file_fight_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x66, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x66,
	0x69, 0x67, 0x68, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x30, 0x0a, 0x0e, 0x63, 0x32, 0x73, 0x5f, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x22, 0x42, 0x0a, 0x0e, 0x73, 0x32, 0x63, 0x5f, 0x41, 0x75, 0x74, 0x6f,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x41, 0x75, 0x74, 0x6f,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x67, 0x0a, 0x11, 0x63, 0x32, 0x73, 0x5f,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x73, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x73, 0x49,
	0x44, 0x22, 0x63, 0x0a, 0x11, 0x73, 0x32, 0x63, 0x5f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x63, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xb9, 0x01, 0x0a, 0x13, 0x73, 0x32, 0x63, 0x5f, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x75, 0x73, 0x68, 0x12, 0x2c,
	0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x0f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x73, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x61, 0x63,
	0x74, 0x69, 0x63, 0x73, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x73, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x73,
	0x49, 0x44, 0x22, 0xaf, 0x01, 0x0a, 0x0d, 0x70, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x70, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x70, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x65, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x0a, 0x0b, 0x70, 0x5f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6c, 0x6f, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x61, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x75, 0x66, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x75, 0x66, 0x69,
	0x64, 0x2a, 0xad, 0x01, 0x0a, 0x09, 0x4d, 0x53, 0x47, 0x5f, 0x46, 0x49, 0x47, 0x48, 0x54, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x48, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x5f, 0x46,
	0x49, 0x47, 0x48, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x46, 0x49, 0x47, 0x48, 0x54, 0x10, 0xa0, 0x1f, 0x12, 0x14, 0x0a, 0x0f, 0x43, 0x32, 0x53,
	0x5f, 0x41, 0x75, 0x74, 0x6f, 0x5f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x10, 0xa1, 0x1f, 0x12,
	0x14, 0x0a, 0x0f, 0x53, 0x32, 0x43, 0x5f, 0x41, 0x75, 0x74, 0x6f, 0x5f, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x10, 0xa2, 0x1f, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x73, 0x10, 0xa3, 0x1f, 0x12, 0x17,
	0x0a, 0x12, 0x53, 0x32, 0x43, 0x5f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x54, 0x61, 0x63,
	0x74, 0x69, 0x63, 0x73, 0x10, 0xa4, 0x1f, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x32, 0x43, 0x5f, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x75, 0x73, 0x68, 0x10, 0xaa,
	0x1f, 0x42, 0x1a, 0x5a, 0x18, 0x73, 0x6c, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6d,
	0x73, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fight_proto_rawDescOnce sync.Once
	file_fight_proto_rawDescData = file_fight_proto_rawDesc
)

func file_fight_proto_rawDescGZIP() []byte {
	file_fight_proto_rawDescOnce.Do(func() {
		file_fight_proto_rawDescData = protoimpl.X.CompressGZIP(file_fight_proto_rawDescData)
	})
	return file_fight_proto_rawDescData
}

var file_fight_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fight_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_fight_proto_goTypes = []interface{}{
	(MSG_FIGHT)(0),              // 0: fight.MSG_FIGHT
	(*C2S_AutoSelect)(nil),      // 1: fight.c2s_AutoSelect
	(*S2C_AutoSelect)(nil),      // 2: fight.s2c_AutoSelect
	(*C2S_SelectTactics)(nil),   // 3: fight.c2s_SelectTactics
	(*S2C_SelectTactics)(nil),   // 4: fight.s2c_SelectTactics
	(*S2C_FightRecordPush)(nil), // 5: fight.s2c_FightRecordPush
	(*P_FightRecord)(nil),       // 6: fight.p_FightRecord
	(*P_FightItem)(nil),         // 7: fight.p_FightItem
}
var file_fight_proto_depIdxs = []int32{
	6, // 0: fight.s2c_FightRecordPush.Record:type_name -> fight.p_FightRecord
	7, // 1: fight.p_FightRecord.attack:type_name -> fight.p_FightItem
	7, // 2: fight.p_FightRecord.defense:type_name -> fight.p_FightItem
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_fight_proto_init() }
func file_fight_proto_init() {
	if File_fight_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fight_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_AutoSelect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fight_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_AutoSelect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fight_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SelectTactics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fight_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_SelectTactics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fight_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_FightRecordPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fight_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P_FightRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fight_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P_FightItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fight_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fight_proto_goTypes,
		DependencyIndexes: file_fight_proto_depIdxs,
		EnumInfos:         file_fight_proto_enumTypes,
		MessageInfos:      file_fight_proto_msgTypes,
	}.Build()
	File_fight_proto = out.File
	file_fight_proto_rawDesc = nil
	file_fight_proto_goTypes = nil
	file_fight_proto_depIdxs = nil
}
